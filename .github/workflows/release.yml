name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [x86_64, aarch64]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true

    - name: Install dependencies
      run: cargo install --locked cargo-bundle

    - name: Build project
      run: |
        if [ "${{ matrix.arch }}" == "x86_64" ]; then
          cargo build --release
        else
          rustup target add aarch64-pc-windows-msvc
          cargo build --release --target aarch64-pc-windows-msvc
        fi

    - name: Upload artifact (Linux x86_64)
      if: matrix.os == 'ubuntu-latest' && matrix.arch == 'x86_64'
      uses: actions/upload-artifact@v2
      with:
        name: ubuntu-latest-x86_64-heaven
        path: target/release/heaven

    - name: Upload artifact (Linux ARM64)
      if: matrix.os == 'ubuntu-latest' && matrix.arch == 'aarch64'
      uses: actions/upload-artifact@v2
      with:
        name: ubuntu-latest-aarch64-heaven
        path: target/aarch64-unknown-linux-gnu/release/heaven

    - name: Upload artifact (macOS x86_64)
      if: matrix.os == 'macos-latest' && matrix.arch == 'x86_64'
      uses: actions/upload-artifact@v2
      with:
        name: macos-latest-x86_64-heaven
        path: target/release/heaven

    - name: Upload artifact (macOS ARM64)
      if: matrix.os == 'macos-latest' && matrix.arch == 'aarch64'
      uses: actions/upload-artifact@v2
      with:
        name: macos-latest-aarch64-heaven
        path: target/aarch64-apple-darwin/release/heaven

    - name: Upload artifact (Windows x86_64)
      if: matrix.os == 'windows-latest' && matrix.arch == 'x86_64'
      uses: actions/upload-artifact@v2
      with:
        name: windows-latest-x86_64-heaven
        path: target/release/heaven.exe

    - name: Upload artifact (Windows ARM64)
      if: matrix.os == 'windows-latest' && matrix.arch == 'aarch64'
      uses: actions/upload-artifact@v2
      with:
        name: windows-latest-aarch64-heaven
        path: target/aarch64-pc-windows-msvc/release/heaven.exe

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download artifact (Linux x86_64)
      uses: actions/download-artifact@v2
      with:
        name: ubuntu-latest-x86_64-heaven
        path: artifacts/ubuntu/x86_64

    - name: Download artifact (Linux ARM64)
      uses: actions/download-artifact@v2
      with:
        name: ubuntu-latest-aarch64-heaven
        path: artifacts/ubuntu/aarch64

    - name: Download artifact (macOS x86_64)
      uses: actions/download-artifact@v2
      with:
        name: macos-latest-x86_64-heaven
        path: artifacts/macos/x86_64

    - name: Download artifact (macOS ARM64)
      uses: actions/download-artifact@v2
      with:
        name: macos-latest-aarch64-heaven
        path: artifacts/macos/aarch64

    - name: Download artifact (Windows x86_64)
      uses: actions/download-artifact@v2
      with:
        name: windows-latest-x86_64-heaven
        path: artifacts/windows/x86_64

    - name: Download artifact (Windows ARM64)
      uses: actions/download-artifact@v2
      with:
        name: windows-latest-aarch64-heaven
        path: artifacts/windows/aarch64

    - name: Create Release
      uses: ncipollo/release-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        artifacts: |
          artifacts/ubuntu/x86_64/*
          artifacts/ubuntu/aarch64/*
          artifacts/macos/x86_64/*
          artifacts/macos/aarch64/*
          artifacts/windows/x86_64/*
          artifacts/windows/aarch64/*
        tag: ${{ github.ref }}
        name: Release ${{ github.ref }}
        body: |
          New release ${{ github.ref }} is available.
        draft: false
        prerelease: false
